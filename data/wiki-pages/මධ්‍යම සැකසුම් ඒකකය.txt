මධ්‍යම සැකසුම් ඒකකයක් (CPU) නැතහොත් සකසනයක් යනු පරිගණක ක්‍රමලේඛ ක්‍රියා කරවිය හැකි තාර්කික යන්ත්‍රයකි. මෙම පුළුල් විග්‍රහය CPU පුළුල් ලෙස භාවිත වීමට පෙර විශාල ප්‍රමාණයෙන් පැවති මුල් පරිගණක රැසකටම පහසුවෙන් යෙදාගත හැකි වේ. අවම වශයෙන් 1960 දශකයේ පටන්වත් මෙම යෙදුම සහ එහි භාවිතයන් පරිගණක ක්ෂේත්‍රය තුළ භාවිත විය. CPU වල ආකාරය , නිර්මාණය හා ක්‍රියාත්මක කිරීම පෙර නිදසුන්වල සිට චමත්කාරජනක ලෙස වෙනස් වී ඇති නමුත් ඒවායේ මූලික ක්‍රියාකාරකම් බොහෝ දුරට  සමාන ලෙස පවතී.
මුල් කාලීන CPU සාමාන්‍යයෙන් එක් වර්ගයක පරිගණකයකට වූ විශාල කොටසක් ලෙස නිර්මාණය කෙරුණි. කෙසේ නමුත් විශේෂ අවශ්‍යතා සඳහා භාවිතාවන CPU නිර්මාණය කිරීමේ ‍මෙම මිළ අධික ක්‍රමය තනි හෝ වඩා වැඩි අරමුණු සදහා සුදුසු වන සැකසුම් (Processors) නිෂ්පාදනය පුළුල් වීමට මාර්ගය සැකසුවේය.  විවික්ත ට්‍රාන්සිස්ටර, සුපිරි පරිගණක සහ මිනි පරිගණක යුගයේ ක්‍රමයෙන් මෙම ප්‍රමතකරණ ක්‍රියාදාමය ආරම්භ වූ අතර සංගෘහිත පරිපථ ප්‍රචලිත වීමත් සමඟ එය වඩාත් සීඝ්‍ර තත්වයට පත් විය. CPU වල කුඩාකරණය හා ප්‍රමිතිකරණය යන දෙක, ගණනය කිරීමේ යන්ත්‍රවල සීමාකාරී භාවිතයෙන් පිටතට ගොස් නවීන ජීවිතයේ මෙම අංකිත උපකරණ භාවිතා කිරීම වර්ධනය කර තිබේ. නවීන ක්ෂුද්‍ර සකසනය (Micro Processor) මෝටර්  රියවල සිට ජංගම දුරකතන හා සෙල්ලම් බඩු දක්වා වූ සෑම දේකම භාවිතා වේ.


== මධ්‍යම සැකසුම් ඒකකයෙහි (CPU) ඉතිහාසය ==

වර්තමානයේ පවත්නා මධ්‍යම සැකසුම් ඒකක (CPU) ඇති පරිගණක වල තත්ත්වයට පැමිණීමට පෙරාතුව, ENIAC ආදී පරිගණක එකිනෙකට වෙනස් කටයුතු සිදු කිරීම සඳහා නැවත නැවත භෞතික රුහැන්ගත කිරීමට සිදුවිය. මෙම පරිගණක බොහෝවිට “ස්ථාවර ක්‍රම ලේඛිත පරිගණක” ලෙස හඳුන්වනු ලැබුවේ ‍ඒවා හැමවිටම එකිනෙකට වෙනස් වැඩසටහන් ධාවනය කිරීම වෙනුවෙන් භෞතිකව නැවත හැඩගැස්මක් කළ යුතු වු නිසාය. “මධ්‍යම සැකසුම් ඒකකය (CPU)” යන යෙදුම පොදුවේ මෘදුකාංග (පරිගණක ක්‍රමලේඛ) ක්‍රියාකරවීමට නිපදවා ඇති උපකරණයක් ලෙස සලකන බැවින්, මධ්‍යම සැකසුම් ඒකකය(CPU) ලෙස නිරවද්‍යවම හඳුන්වා දියහැකි මුලිකම උපකරණය ‍සහිත ක්‍රමලේඛ පරිගණකවල ආගමනයත් සමඟ කරළියට පිවිසියේය.
ආචිත ක්‍රමලේඛ (stored-program) පරිගණකයේ අදහස් ENIAC සැලසුම් කරන විටත් පැවතිණි. නමුත් එය ආරම්භයේදීම අත්හැර දැමුවේ පරිගණකය ඉතා ඉක්මණින් නිමකිරීමේ අරමුණෙනි. 1945 ජුනි 30 දී,  ENIAC  පරිගණකය සම්පුර්ණයෙන් නිමකිරීමටත් පෙරාතුව, ජෝන් වැන් නියුමැන් නම් ගණිතඥයා විසින්  “First Draft of a Report on the EDVAC “නම් වු පත්‍රයක් ප්‍රකාශයට පත් කර බෙදා හැර තිබිණි. එය 1949 අගෝස්තුවේදී නිම කිරීමට නියමිත ආචිත ක්‍රමලේඛ පරිගණකයක දළ සටහනක් විස්තර කිර තිබිණි(Van Neumann 1945). EDVAC  සැලසුම් කර තිබු‍නේ විවිධාකාරයේ උපදෙස් (හො මෙහෙයුම්) නිශ්චිත සංඛ්‍යාවක් ඉටු කිරීම සඳහාය. මෙම උපදෙස් සමහරක් EDVAC ධාවනය කිරීම සඳහා අවශ්‍ය ඵලදායී ක්‍රමලේඛ නිර්මාණය කිරීම සඳහා සංයුක්ත කර ගත හැකි විය. විශේෂයෙන්ම  EDVAC සඳහා රචිත ක්‍රමලේඛයන් ස්ථාපිත කර තිබුණේ අධිවේග පරිගණක මතකයකය. මෙය පරිගණකයේ භෞතික රුහැන්ගතකරණයෙන් සඳහන් කර ඇති ක්‍රමවේදයට සාපේක්ෂව වෙනස්ය. මෙය EDVAC හි තිබු සැලකිය යුතු තරමේ අඩුපාඩුවක් මැඩපැවැත්වීමට හේතු පාදක විය. එනම් නව කාර්යයන් සිදුකිරීම සඳහා නැවත හැඩගැස්වීමට සිදුවන කාලය හා ශ්‍රමය විශාල වශයෙන් අඩු වීමයි. වැන් නියුමැන්ගේ සැලසුමත් සමඟ මෙතෙක් බරපතල ගැටලුවක්ව තිබු EDVAC  හි ධාවනය කරමින් තිබු ක්‍රමලේඛනයන්ගේ මෘදුකාංගයක් වෙනස් කිරීම, සරලවම පරිගණක මතකයේ අන්තර්ගතය වෙනස් කිරීමෙන් පහසුවෙන් සිදුකල හැකි විය. සිය ප්‍රමුඛතම සැලසුමක් වන EDVAC නිර්මාණ කිරීම හේතුවෙන් ආචිත ක්‍රමලේඛන පරිගණක සැලසුම් කිරීමෙහිලා වැන් නියුමැන්හට සුවිශේෂි කීර්තියක් හිමි වු අතර, ඔහුට පෙර  කොන්රුඩ් සු(z)ස් වැන්නවුන්ද ඒ ආකාරයෙන්ම අදහස් යෝජනා කර තිබිණි. මීට අමතරව Harvard Mark I හි Harvard නිර්මාණ ශිල්පයද ‍ඉලෙක්ට්‍රොනික මතකය වෙනුවට සිදුරු කල කඩදාසි පටි භාවිතයෙන් ආචිත ක්‍රමලේඛන  සැලසුමෙන් හොඳ ප්‍රයෝජනයක් ලබා ගත්තේය.  වැන් නියුමැන්ගේ ආකෘතිය හා Harvard නිර්මාණ ශිල්පිය අතර ප්‍රධාන වෙනස ලෙස සැලකිය හැක්කේ දෙවැන්න මධ්‍යම සැකසුම් ඒකකයේ (CPU) උපදෙස් හා දත්ත ගබඩා කිරීම හා හැසිරවීම වෙන් වෙන්ව සැලකීම වන අතර, පළමුවැන්න කාර්යයන් දෙකම සඳහා එකම මතක අවකාශය භාවිතා කිරීමයි. ‍බොහෝමයක් නුතන පරිගණක සැලසුමෙන් වැන් නියුමැන්ගේ ආකෘතිය වන මුත්  Harvard  ආකෘතියේ මුලිකාංගද පොදුවේ ඒවායේ දැක ගැනීමට පුළුවන.
සංඛ්‍යාංක (digital)  උපාංග වීම හේතුවෙන් සියලුම මධ්‍යම සැකසුම් ඒකක (CPU)  විවික්ත අවස්ථා සමඟ කටයුතු කරන අතර එමනිසා ඒවා සඳහා කිසියම් ආකාරයක අවස්ථා අතර හුවමාරු වීමේ අවයවයක් තිබීම මෙම තත්ත්ව වෙන් වෙන්ව හඳුනාගැනිම සඳහා අත්‍යවශ්‍ය වේ. ට්‍රාන්සිස්ටරයට වාණිජමය වටිනාකමක් ලැබීමට පෙරාතුව, විද්‍යුත් ප්‍රතියෝජක හා රික්තක නල බොහෝවිට අවස්ථා හුවමාරු අවයව ලෙස භාවිතා විණි. මීට පෙර පැවැති පුර්ණ වශයෙන් ‍යාන්ත්‍රික සැලසුම් වලට සාපේක්ෂව මේවායේ පැහැදිලි වේග පරිමාණ වෙනසක් ඇතත්, ඒවායේ විශ්වාසීභාවය එතරම් ‍ හොඳ මට්ටමක් නොවිණි. මේ සඳහා උදාහරණයක් ලෙස ප්‍රතියෝජන මඟින් සරල ධාරා අනුක්‍රමික තර්ක පරිපථ සෑදීමේදී ඇතිවන ස්පර්ශය පොළා පැනීම නමැති (contact bounce) දුෂ්කරතාවය  මඟහැරවීමට අමතර දෘඩාංග අවශ්‍ය වීම සැලකිය හැක. රික්තක නලයක ස්පර්ශය පොළා පැනීම තත්ත්වයට පත්වීමට ඉඩක් නොමැති නමුත් ඒවා පූර්ණ සක්‍රීය තත්ත්වයට පත් වීමට පෙර නියමිත උෂ්ණත්වයකට ගෙන ආයුතු අතර ක්‍රමයෙන් එය අඩු වී අක්‍රිය වී යයි. සාමාන්‍යයෙන් නලයක ක්‍රියාකාරිත්වය නැවතුනු විට මධ්‍යම සැකසුම් ඒකක (CPU)  පිරික්සා බැලීමෙන් අක්‍රිය වු කොටස හරහා ගෙන එය නැවත ප්‍රිතිස්ථාපනය කිරීම සිදු කෙරේ.  එම නිසා මුලික ඉලෙක්ට්‍රෝනික (රික්ත නල මුලික වු ) පරිගණකයන් සාමාන්‍යයෙන්  විද්‍යුත් යන්ත්‍ර (ප්‍රතියෝජක මුලික වු) පරිගණක වලට වඩා වේගවත්, නමුත් විශ්වාසනීයභාවය තරමක් අඩු ඒවා ලෙස සැලකේ.  EDVAC ආදී නාල පරිගණක සාමාන්‍යයෙන් පැය 8 කට වරක් අක්‍රීය වීමක් කරා නැඹුරු  විය හැකි මුත්, Harvard Mark I ආදී ප්‍රතියෝජක පරිගණක (මදවේග නමුත් පෙරාතුව) අක්‍රීය තත්ත්වයට පත්වුයේ ඉතා කලාතුරකිනි.  (Weik 1961:238) අවසානයේ නාල මුලික පරිගණක ප්‍රමුඛ ස්ථානයකට පැමිනියේ, එමඟින් සැපයුන සුවිශේෂි වේග වාසිය විශ්වාසය පිළිබඳ දුෂ්කරතාවලට වඩා වැදගත් වු බැවිනි. බොහෝමයක් පැරණි සම මුහුර්තක මධ්‍යම සැකසුම් ඒකක (CPU) නූතන ක්ෂ්‍රදු ඉලෙක්ට්‍රොනික සැකසුම් වලට සාපේක්ෂව අඩු ස්පන්ද වේගයකින් ධාවනය විය. (ස්පන්ධ වේග පිළිබඳ සාකච්ඡාවක් සඳහා පහත බලන්න) 100 Khz 4 MHz ස්පන්ද සංඥා සංඛ්‍යාතයක් මේ කාලයේදී බොහෝ සුලබ වු අතර ඒවා ගොඩනගන ලද හුවමාරු අවයවයන්ගේ වේගයන් මත විශාල වශයෙන් සීමා විය.


=== ට්‍රාන්සිස්ටර සහ සංගෘහිත පරිපථ CPU ===


=== අණුසකසු ===

1970 දී මයික්‍රො ප්‍රොසෙසරය හදුන්වාදීම CPU සැලසුම් කිරීමට හා නිෂ්පාදනයට සැලකිය යුතු බලපෑමක් සිදු කළේය. 1970 දී ප්‍රථම මයික්‍රො ප්‍රොසෙසරය (intel 4004) හා 1974 දී ප්‍රථම විශාල ලෙස භාවිතා කළ මයික්‍රො ප්‍රොසෙසරය (Intel 8080)  හදුන්වාදීමේ සිට මෙම වර්ගයේ CPU එකකුත් සියලු මධ්‍යම සැකසුම් ඒකක (CPU) නිෂ්පාදන ක්‍රම අභිබවා යාමට සමත් විය. එම කාලයේ මේන්ෆ්‍රේට් (Mainframe) හා මිනි කම්පියුටර (minicomputer) නිෂ්පාදකයන් ඔවුන්ගේ පැරණි පරිගණක සැලසුම් ශිල්ප ආකෘති වැඩි දියුණු කිරීමට (upgrade) වෙළද නාම යටතේ (හිමිකම් සහිත) 1C දියුණු කිරීමේ වැඩසටහන් දියත් කළ අතර ඔවුන්ගේ පැරණි දෘඩාංග හා මෘදුකාංග සමග පසු ගැළපුම් වන මයික්‍රොප්‍රොසෙසර නිෂ්පාදනය කරන ලදී. වර්තමානයේ බහුලව ඇති පුද්ගලික පරිගණකවල ආගමන හා විශාල සාර්ථකත්වයක් සමග CPU  යන්න දැන් බොහෝ විට ව්‍යවහාර වන්නේ මයික්‍රොප්‍රොසෙසර භාවිත සඳහාය.
පෙර පරම්පරාවේ CPU පරිපථ පුවරු එකක් හෝ කිහිපයක් මත එකිනෙකට වෙන් වෙන්ම පවතින ලෙස සහ කුඩා සංගෘහිත පරිපථ (IC) ගණනාවකින් යුක්තව නිර්මාණය කරන ලදී. නමුත් CPU  නිෂ්පාදය කරන්නේ IC ඉතා කුඩා ප්‍රමාණයක් යොදාගෙනය. (සාමාන්‍යයෙන් එකක් පමණක්) , තනි අච්චුවක් යොදාගෙන නිෂ්පාදනය කරන නිසා ප්‍රමාණයෙන් කුඩාවන CPU වල ද්වාර පරපෝෂිත ධාරිතාව (gate parasitic capacitance) අඩු වීම වැනි භෞතික සාධක නිසා වඩා වේගවත් මාරු වීමේ කාල ලැබී ඇත. මේ නිසා සම මුහුර්තිත (syn chronons) මයික්‍රොප්‍රොසෙසරවලට මෙගා හර්ට්ස් 10 සිට ගිගාහර්ට්ස් කිහිපයක් දක්වා පරාස ගතවන ස්පන්ද සීග්‍රතා (Clock rate) ඇත. අතිරේකව IC මත ඉතා කුඩා ට්‍රාන්සිස්ටර නිර්මාණය කිරීමේ හැකියාව වැඩිදියුණු වී ඇති හෙයින් තනි CPU  එකක් මත ට්‍රාන්සිස්ටර ගණන හා සංකීර්ණතාව ක්‍රමානුකූලව වැඩි‍වී ඇත. මෙම පුළුල්ව නිරීක්ෂිත ප්‍රවණතාව “මුවර්ගේ නීතිය” (Moore’s law) මඟින් විස්තර කරයි. CPU  හි සංකීර්ණත්වයේ වර්ධනය පිළිබද වඩාත්ම නිවැරදි අනාවැකිකරුවා වන්නේ මූර්ගේ නීතියයි.
CPU වල සංකීර්ණතාව , ප්‍රමාණය , නිෂ්පාදනය හා සාමාන්‍ය ආකාරය පසුගිය වසර 60 තුළ විශාල ලෙස වෙනස් වී ඇතත් මූලික සැකැස්ම හා ක්‍රියාකාරීත්වය වෙනස්ව ඇත්තේ ඉතා සුළු වශයෙනි. වර්තමානයේ ඇති CPU බොහොමයකට පාහේ ඉතා නිරවද්‍ය ලෙස‍ “වොන් නියුමාන්” (Von Neumann) ගබඩාගත - ක්‍රමලේඛ යන්ත්‍රන ලෙස විස්තර කළ හැකිය. පෙර සඳහන් කරන ලද මූර්ගේ නීතිය දිගින් දිගටම සත්‍ය ලෙස රදා පවතින නිසා සංගෘහිත පරිපථ ට්‍රාන්සසිස්ටර තාක්ෂණයේ සීමා ගැන විවිධ සංකල්ප මතුවෙමින් පවතී. ඉලෙක්ට්‍රොනික ‍ද්වාර (electronic gates) අධික ලෙස කුඩා කිරීම ඉලෙක්ට්‍රෝන සංරචණ (electromigration) හා උප සීමක කාන්දුව (subthreshold leakage) වැනි සංසිද්ධිවල බලපෑම වඩාත් කැපී පෙනීමට හේතු වී ඇත. මෙම නව සංකල්ප පර්යේෂකයන්ට ක්වොන්ටම් පරිගණක වැනි පරිගණක ක්‍රම පිළිබද පර්යේෂන පැවැත්වීමට හේතුවන හේතු සාධක අතර ඇති අතර අනුවර්තී වාදයේ (parallelism) භාවිතා වන සම්භාව්‍ය වොන් නියුමාන් ආකෘතිය ප්‍රයෝජනවත් බව වැඩි කිරීමට හේතු වී ඇත.


== මධ්‍යම සැකසුම් ඒකකයෙහි උපදෙස් මට්ටමේ සමාන්තරතාවය ==
සමාන්තරතාව උත්සන් කළ හැකි සරලම ක්‍රමයක් වන්නේ මුල් උපදෙස් ක්‍රියා කරවීම හා නිමවීමට පෙර උපදෙස් ආහරනය කිරීමේ හා විකේතනය කිරීමේ මුල් පියවර ගැනීමයි. මෙය උපදෙස් නල මාර්ගකරණය නැමති ශිල්පීය ක්‍රමයේ සරලම ආකාරය වෙයි. මේ සඳහා සියළුම නවීන පොදු කාර්ය මධ්‍යම සැකසුම් ඒකකයක්ම (CPU) පාහේ යොදා ගැනේ. නල මාර්ගකරණය මඟින් ක්‍රියා කරවීම වි‍විධ අවධි වලට වෙන් කරන බැවින් එක් අවධියකදී, එක් උපදෙසකට වඩා ක්‍රියා කරවීමට අවස්ථාව ලැබේ. උපදෙස්  ක්‍රියා කරවා නළ මාර්ගයෙන් ඉවත් කෙරෙන තෙක් එක් එක් අවධියේදී වඩ වඩා පුර්ණ කිරීම සිදු කරන බැවින් මෙම වෙන් කිරීම එක්ලස් පෙළකට සමාන කල හැකි වේ.
කෙසේ වෙතත් නළ මාර්ගකරණයෙන් සිදුවන මුල් මෙහෙයුමක ප්‍රතිඵලය ඊළඟ මෙහෙයුම නිම කිරීමට අවශ්‍ය වන අවස්ථා ඇති වීමට පුළුවන. මෙම තත්ත්වය දත්ත ආයත්තතා ගැටුම ලෙස හැඳින්වේ. මෙවැනි තත්ත්ව මැඩ පැවැත්වීමට හැකි ආකාරයක් උදා වුවහොත් උපදෙස් නළ මාර්ගයේ කොටසක් පමා කිරීම සඳහා අතිරේක පරිපථාවලියක් අවශ්‍ය වෙයි. ඒ නිසා නළ මාර්ගස්ථ සකසනය (subscalar) ඊට වඩා සංකිර්ණ වේ. (නමුත් සුවිශේෂ ලෙස සංකිර්ණ නොවේ). නළ මාර්ගයක සකසනයක අදීශ තත්වයට ඉතාමත් ලන්විය හැකි අතර නිෂේධනය විය හැක්කේ නළ මාර්ග හදිසියේ නතර වීමෙන් පමණි. (උපදෙස් එක් අවදියකදී එක් ස්පන්දන චක්‍රයකට වඩා ගැනීමෙනි)

උපදෙස් නල මාර්ගය පිළිබඳ අදහස තවදුරටත් වැඩිදියුණු කිරීමෙන් මධ්‍යම සැකසුම් ඒකක (CPU) අංගයන්හි අභාවිත කාලය තවදුරටත් අවම කරන ක්‍රම දියුණු වීමට මඟ පෑදිනි. සුපිරි අදීශ ලෙස හඳුන්වන සැලසුම් වල දිගු උපදෙස් නල මාර්ග හා බහු සර්වසම ක්‍රියාකරවන ඒකක අඩංගු වේ. සුපිරි අදීශ නල මාර්ග බහු උපදෙස් ප්‍රමාණයක් කියවා ඒවා  සන්දේශය (dispatcher) වෙත යවන අතර, උපදෙස් සමාන්තරව එක විටම ක්‍රියා කරවිය හැකිද, නැද්ද  යන්න තීරණය කරන්නේ ඒවා ‍මඟිනි. එසේ නම් ඒවා ක්‍රියාකරවන තිබෙන ඒකක වෙත යැවෙන අතර, මෙමඟින් උපදෙස් කිහිපයකට එකවර ක්‍රියා කරවීමේ හැකියාව ලැබේ. සමස්ථයක් ලෙස ගත් විට සුපිරි අදිශ මධ්‍යම සැකසුම් ඒකක (CPU) මඟින් ක්‍රියා කරවන ඒකක වෙත එකවිට යැවිය හැකි උපදෙස් ප්‍රමාණය වැඩිවත්ම, වැඩි උපදෙස් ප්‍රමාණයක් එක් චක්‍රයකදී සම්පුර්ණ කර ගත හැකිවේ. සුපිරි අදීශ මධ්‍යම සැකසුම් ඒකක (CPU) නිර්මිතය සැලසුම් කිරීම ගත්විට අපහසුම කාර්යය වන්නේ  සන්දේශකය (dispatcher)  නිර්මාණය කිරීමයි. සන්දේශකයට (dispatcher)  කුමන උපදෙස් සමාන්තරව ක්‍රියා කරවිය හැකි දැයි ඉක්මනින් හා නිවැරදිව නිර්ණය කළ හැකි විය යුතු අතරම, උපරිම ක්‍රියාකරවන ඒකක ගණනක් කාර්ය බහුලව තැබෙන ආකාරයට එම උපදෙස් යැවිය යුතුය. මේ සඳහා උපදෙස් නල මාර්ගය ඉක්මනින් පිරිවය යුතු අතර, මධ්‍යම සැකසුම් ඒකක (CPU) හැඹිලියේ සැලකිය යුතු කොටස් ප්‍රමාණයක් සුපිරි අදීශ නිර්මිතය යොදා ගැනීමේ අවශ්‍යතාව වැඩි කරයි. එසේම ඉහල මට්ටමක කාර්ය සාධකයක් ‍පවත්වා ගැනීම උදෙසා ශාඛා අනාවැකිය (branch prediction), විචාරාත්මක සම්පාදනය (speculative execution) සහ ක්‍රියා විරහිත සම්පාදනය(out-of-order-execution) වැනි උපද්‍රව මඟහැරිම් ශිල්පීය ක්‍රම යොදා ගැනීම තීරණාත්මක වේ. කොන්දේසි සහගත උපදෙස් මඟින් කුමන ශාඛාවක් ‍(හෝ පථයක්) ගනීදැයි අනුමාන කිරීමට උත්සාහ කිරීමෙන් මධ්‍යම සැකසුම් ඒකක හට කොන්දේසි සහගත උපදෙසක් නියම කරන තුරු මහත් ‍නල මාර්ගයම නවතා බලා සිටි මුළු වාර ගණන අඩු කරගත හැකි වේ. කල්පිත ක්‍රියාකරවීම මඟින් කොන්දේසි සහගත මෙහෙයුම් අවසානයේ අවශ්‍ය වන හෝ නොවන කේත කොටස් ක්‍රියා කරවීමෙන් බොහෝ විට ප්‍රමාණවත් කාර්ය සාධන වර්ධනයක් ලබා දේ. අපිළිවෙලට ක්‍රියා කරවීම මඟින් යම් ප්‍රමාණයකට උපදෙස් ක්‍රියා කිරීමේ පිළිවෙල නැවත සැකසීමක් සිදුවන අතර, දත්ත ආයත්තතාවයන් මඟින් ඇතිවන ප්‍රමාද අඩු කර ගත හැකිවේ.
මධ්‍යම සැකසුම් ඒකක (CPU)හි කොටසක් සුපිරි අදීශ හා කොටසක් එසේ නොවන අවස්ථාවකදී එම සුපිරි අදීශ නොවන කොටසට උපලේඛනය කිරීම නතර වීම නිසා කාර්ය සාධනය අතින් පාඩු විදීමට සිදුවේ. මුල්   Intel Pentium(P5)  හට එකකින් එක කාල චක්‍රයකදී එක් උපදෙසක් ප්‍රතිග්‍රහණය කරන සුපිරි අදීශ අංක ගණිතය තර්ක ඒකක දෙකක් තිබු නමුත්, එහි FPU හට එක් කාල චක්‍රයකදී එක් උපදෙසක් ප්‍රතිග්‍රහණය කළ ‍නොහැකි විය. එමනිසා  Intel Pentium(P5) නිඛිල අතින් සුපිරි අදීශ වු අතර, ඉපිලෙන ලක්ෂ්‍ය අතින් සුපිරි අදීශ නොවීය. Intel හි Pentium නිර්මිතියට අනුප්‍රාප්තිකයාවු  P6  හි ඉපිලෙන ලක්ෂීය විශේෂාංග වලට සුපිරි අදීශ හැකියාව එක් කර තිබු අතර, එම නිසා ඉපිලෙන ලක්ෂීය උපදෙස් ක්‍රියා කරවීමෙහි සුවිශේෂී වර්ධනයක් සලසවා ගත හැකිවිය.
සරල නල මාර්ගකරණය හා සුපිරි අදීශ සැලසුම් යන දෙකම මඟින් මධ්‍යම සැකසුම් ඒකක (CPU) හි උපදෙස් මට්ටමේ සමාන්තරතාවය (ILP) වර්ධනය කරයි. එමෙන්ම තනි සකසනයකට, චක්‍රයකට එක් උපදෙසක් ඉක්මවන සීඝ්‍රතාවයකින් උපදෙස් ක්‍රියා කරවීමට අවස්ථාව ලැබේ. බොහෝ නවීන මධ්‍යම සැකසුම් ඒකක සැලසුම් යම්දුරකට සුපිරි අදීශ වන අතර, පසුගිය දශකයෙහි සැලසුම් කල පොදු කාර්ය මධ්‍යම සැකසුම් ඒකක සියල්ලම පාහේ සුපිරි අදීශ වේ. පසුගිය වසර වලදී ඉහළ  ILP පරිගණක සැලසුම් කිරීමට තිබු ප්‍රමුඛතාවය මධ්‍යම සැකසුම් ඒකක දෘඩාංග වලින් ඉවත් කොට එහි මෘදුකාංග අතුරු මුහුණතකට හෝ ISA වෙත ලබාදී ඇත. ඉතා දිගු උපදෙස් පද (VLIW) මුලෝපාය මඟින් සමහර ILP හට ඍජුව මෘදුකාංග මඟින් ගම්‍යමාන වීමට ඉඩ සැලසේ. එමඟින් මධ්‍යම සැකසුම් ඒකක මඟින් ILP හුවා දැක්වීමට කල යුතු වැඩ ප්‍රමාණය අඩු කරන අතර මේ හේතුවෙන් සැලසුමෙහි ඇති සංකීර්ණතාව අඩු වේ. 


== ස්පන්ද සීඝ්‍රතාව ==
බොහොමයක් CPU හා අනුක්‍රමික තාර්කික උපාංග ස්වභාවයෙන්ම සමමුහුර්තිත වේ. එනම් ඒවා නිර්මාණය කර ඇත්තේ සමමුහුර්ත කරණ සංඥාවක් පිළිබඳ උපකල්පනයක් මත ධාවනය වන ලෙසයි. ස්පන්ද සංඥාව ලෙස හඳුන්වන මෙය සාමාන්‍යයෙන් ආවර්තිත හතරැස් සංඥාවක ආකාර ‍ගනී. CPU හි බොහොමයක් පරිපථවල විවිධ අංශවල විද්‍යුත් සංඥාව චලනය වන උපරිම කාලය ගණනය කිරීමෙන්, CPU සැලසුම්කරුවන්ට ස්පන්ද සංඥාව සඳහා සුදුසු ආවර්තය තෝරා ගත හැක.
මෙම ආවර්තය අන්ත බරපතල අවස්ථාවලදී සංඥාවට යෑමට හෝ ව්‍යාප්ත වීමට ගතවන කාලයට වඩා වැඩි විය යුතුයි. අන්ත තත්වයේ ව්‍යාප්ති සීමාවට වඩා සැලකිය යුතු තරම් වැඩි අගයකට ස්පන්ද ආවර්තය සකස් කිරීමෙන් මුලු CPU එක  හා උස පහත් වන සප්න්ද සංඥාවේ මුළු අවට දී එය දත්ත හසුරවන ආකාරය නිර්මාණය කළ හැකි වේ. විශේෂිතවම මෙහි දී සැලසුම් කිරීමේ අංශයෙන් හා සංරචක ගැනුම් අංශයෙන් යන අංශ දෙකේම CPU සරල වීමේ වාසිය ලැ‍බේ. කෙසේ නමුත් මෙහි අවාසියක් වන්නේ CPU හි සමහරක් අවයව වලට වඩා වේගයෙන් ක්‍රියා කළ හැකි වුවත් මුලු CPU ට එහි මන්දගාමීව අවයවය තෙක් බලා සිටිය යුතු වීමයි. මෙම සීමා කිරීම් CPU අනුවර්තීවාදය ඉහල නැංවීමේ විවිධ ක්‍රම මඟින් විශාල ලෙස හානි පූර්ණයට ලක් වේ.(පහත බලන්න)
කෙසේ නමුත් නිර්මිත දියුණු වීම් පමණක්, විශ්වීයම සමමූර්තිත CPU වල සියලු දුබලතා නිරාකරණය නොකරයි. උදාහරණයක් ලෙස ස්පන්ද සංඥාවක් අනෙක් ඕනෑම විද්‍යුත් සංඥාවක පමාවට හේතු වේ. සංකීර්ණ CPU වල අධි ස්පන්ධ සීඝ්‍රතා , මුළු ඒකකය පුරාම ස්පන්ද සංඥාව කලාවේ (සමමූර්තිත) පිහිටුවා ගැනීම අපහසු කරවයි. මෙය CPU හි දෝශ ක්‍රියාකාරීත්වයට ප්‍රමාණවත් වන තනි සංඥාවක ප්‍රමාද වීම වැළැක්වීම සඳහා සමාන බහු ස්පන්ද සංඥා ඇති කරවීමට බොහොමයක් නූතන CPU මෙහෙය වීය. ස්පන්ද සීඝ්‍රතාව වැඩි වීමේ තවත් ප්‍රධාන ප්‍රශ්නයක් වන්නේ CPU මඟින් උත්පාදනය වන තාප ප්‍රමාණයයි. නිතර වෙනස් වන ස්පන්ද, බොහොමයක් උපාංග ඒවා ඒ අවස්ථාවේ දී භාවිතා වේ ද යන්න නොසලකා ක්‍රියාත්මක වීමට සලස්වයි. සාමාන්‍යයෙන් ක්‍රියාත්මක උපාංගයක් එය ස්ථිතික අවස්ථාවේ ඇති විට දී ට වඩා වැඩි ශක්තියක් භාවිතා කරයි. එම නිසා ස්පන්ද සීඝ්‍රතාව වැඩි වීමත් සමඟ CPU තාප විමෝචනය ද වැඩි වන අතර එම නිසා වඩා කාර්යක්ෂම සිසිලන පද්ධතියක් අවශ්‍ය වේ.
අනවශ්‍ය උපාංග ක්‍රියාත්මක වීම වැළැක්වීමේ එක් ක්‍රමයක් ස්පන්ද ද්වාරකරණය (clock gating) ලෙස හඳුන්වයි. එහි දී සිදු කෙරෙනුයේ අනවශ්‍ය උපාංගවලට ස්පන්ද සංඥාව කපා හැරීමයි. (වඩාත් නිරවද්‍යව ඒවා ක්‍රියා විරහිත කිරීම) කෙසේ නමුත් මෙය ක්‍රියාත්මක කිරීමට අපහසු ලෙස සැලකෙන නිසා ඉතා අඩු  බල සැලසුම්වල හැර පොදු භාවිතයේ දක්නට නැත. විශ්ව ස්පන්ද සංඥාවේ සමහරක් ගැටලුවලට විසඳුම් සෙ‍වීමේ තවත් ක්‍රමයක් වනනේ සියල්ල සමඟම ස්පන්ද සංඥාව ඉවත් කිරීමයි. ස්පන්ද සංඥාව ඉවත් කිරීම සැලසුම් කිරීමේ ක්‍රියාවලිය වඩාත් සංකීර්ණ වන නමුත් අසමකාලික (asynchronous) නිර්මාණ ‍(‍හෝ ස්පන්ද රහිත) ඒ හා සමාන සමමූහුර්තිත නිර්මාණ හා සැලකීමේ දී ජව භාවිතයේ දී හා තාප විමෝචනයේ දී වාසි ගෙන දේ. යම් තාක් දුරකට නොගැලපෙන වුවත්, ස්පන්ද සංඥාවකින් තොරව සම්පූර්ණ CPU පවා නිර්මාණය කර ඇත. මේ සඳහා උදාහරණ දෙකක් වන්නේ ARM ට අනුකූල AMULET හා MIPS R3000 සමඟ ගැලපෙන මිනි MIPS ය. සමහරක CPU සැලසුම් ස්පන්ද සංඥාව සම්පූර්ණයෙන් ඉවත් කරනු වෙනුවට , අංක ගණිතමය කාර්යඵල ලාභ ලබා ගැනීමට සුපිරි ගණයේ පයිප් ලයින් සමඟ අසමකාලික ALU යොදා ගැනීම වැනි, CPU හි යම් කොටස්වල  උපාංග පමණක් අසමකාලික කිරීම සිදු කරයි. සම්පූර්ණව අසමකාලික සැලසුම්වලට ඒවාට අනුරූප සමමුහුර්තිත සැලසුම්වලට සමානව හෝ ඊට වඩා හොඳින් ක්‍රියා කළ හැකිය යන්න සම්පූර්ණයෙන් පැහැදිලි නැති වුවත් අවම තරමින් සරල ගණිත ක්‍රියාවලිවල දී වඩා උසස් වන බවට සාක්ෂි ඇත. මෙය ඔවුන්ගේ අනර්ඝ ජව පරිභෝජනය හා තාප විමෝචන ගුණ සමඟ සම්බන්ධ මේවා කාවැද්දූ පරිගණක සඳහා සුදුසු බවට ප‍ත් කරයි.


== දත්ත සමාන්තරතාව ==
වැඩි කතාබහට ලක් නොවන නමුත් මධ්‍යම සැකසුම් ඒකකයෙ (CPU) හි ඉතා වැදගත් අංගයකි, දත්ත සමාන්තරතාවය. දත්ත සකසන (Processor) සියල්ලම අදීශ උපකරණ ලෙස හැඳින්වේ. එක් උපදේසයක් ගැන සැලකීමේදී, දෛශික සකසන ක්‍රියා කරන්නේ දත්ත කොටස් රාශියක් සමඟයි. එම නිසා දෛශික සකසන, අදීශ සකසන වලින් වෙනස් වෙයි. මක් නිසාද අදීශ සකසන ක්‍රියාකරන්නේ දත්ත එක් කොටසක් සමඟ පමණක් බැවිනි. ෆ්ලින් (Flyn)ගේ වර්ගීකරණයට අනුව, දත්ත හසුරුවන මෙම ක්‍රම 02 පිළිවෙලින් SISD (එක් උපදෙසක් හා එක් දත්තයක්) හා SIMD (එක උපදෙසක්, දත්ත ගොඩක්)  ලෙස හඳුන්වයි. දෛශික දත්ත හා ක්‍රියාත්මක මධ්‍යම සැකසුම් ඒකකය (CPU) නිපදවීමේ වැදගත්කම නම් විශාල දත්ත ප්‍රමාණයක් මත ක්‍රියා කරන , එකම මෙහෙයුමෙන් (උදා: එකතුව, තිත් ගුණිතය) උවමනා වන කාර්යයන් හොඳින් ක්‍රියාත්මක කිරීමට ලැබීමයි. එයට හොඳ උදාහරණයන් ලෙස බහු මධ්‍යම යෙදුම් (රූප, වීඩියෝ ශබ්ද) හා විද්‍යාත්මක හා ඉංජිනේරු කාර්යයන් දැක්විය හැක. අදීශ මධ්‍යම සැකසුම් ඒකක(CPU) එකක් අනිවාර්යයෙන් දත්ත ගොන්නක් එක් එක් උපදෙස් හා අගයන් ආහරණය, විකේතනය හා ක්‍රියාත්මක කිරීම යන මුළු ක්‍රියාවලියම සම්පුර්ණ කළ යුතුය. නමුත් දෛශික මධ්‍යම සැකසුම් ඒකක(CPU) එකක් එක් උපදෙසක් සමඟ ඇති ඊටත් වඩා විශාල දත්ත ගොන්නක මෙහෙයුමක් සිදු කිරීමට සමර්ථය. ඇත්තෙන්ම මෙය කලහැකි වන්නේ යෙදුමක් විශාල දත්ත ගොන්නක මෙහෙයුමක් කරද්දී එක් පියවරකට වඩා අවශ්‍ය වු විටය.
Cray-1 ‍වැනි මුල්ම දෛශික මධ්‍යම සැකසුම් ඒකක(CPU), බොහෝ දුරට ක්‍රියාත්මක වුණේ විද්‍යාත්මක පර්යේෂණ හා ගුප්ත ලේඛන  (Cryptography) යෙදුම් ආශ්‍රිතවය. කෙසේ වෙතත්, බහු මාධ්‍ය බොහෝ ලෙස සංඛ්‍යාංක  (Digital) මාධ්‍යයට මාරු වෙද්දී මෙම SIMD හි අවශ්‍යතාව පොදු කාර්ය පරිගණක සඳහා  ඉතා වැදගත් විය.
සුළු කාලයකට පසු ඉපිලෙන ලක්ෂ්‍ය ක්‍රියාකාරී ඒකක පොදු කාර්ය සකසන වල ඇතුළත් වෙද්දී, SIMD ක්‍රියාකාරී ඒකක ක්‍රියාත්මක කිරීම සඳහා වන නියමාවලිද පොදු කාර්යය  මධ්‍යම සැකසුම් ඒකක(CPU) වල දක්නට පටන් ගැනුණි. Intel හි MMX වැනි සමහර  SIMD නියමාවලි නිඛිල වලට සීමා වුණි. මෙය සමහර මෘදුකාංග නිපදවන්නන්ට බාධාවක් විය. මක්නිසාද මුලිකවම  SIMD වලින් උදව් ලබන යෙදුම් ක්‍රියා ක‍ළේ ඉපිලෙන ලක්ෂ්‍ය අංක සමඟ පමණි. ක්‍රම ක්‍රමයෙන් සාමාන්‍යයන් ISA සමඟ කටයුතු කරන නව SIMD නාමාවලි හඳුන්වාදීමත් සමඟ මෙම තත්ත්වය මඟ හැරි ගියේය. උදාහරණයක් ලෙස Intel හි  SSE හා  Power PC ආශ්‍රිත AltiVec (VXX) පෙන්වා දිය හැක.


== පොට මට්ටමේ සමාන්තරතාව ==
උසස් කාර්ය සාධනයක් අත්කර ගැනීමේ තවත් උපාය මාර්ගයක් වන්නේ බහු ක්‍රම ලේඛන සංඛ්‍යාවක් හෝ පොට සංඛ්‍යාවක් සමාන්තරව ක්‍රියා කරවීමයි. මෙම පර්යේෂණ ක්ෂේත්‍රය සමාන්තර පරිගණක ලෙස ද හඳුන්වයි. ෆ්ල්යින්ගේ වර්ගීකරණය අනුව එය බහු උපදෙස්, බහු දත්ත හෝ MIMD  ලෙස හැඳින්වේ. මෙම අරමුණු ‍උදෙසා යොදා ගත් එක් තාක්ෂණයක් වන්නේ බහු සැකසුමයි. මෙම තාක්ෂණයේ මුල් අවස්ථාව වන්නේ සමමිතික බහු සැකසුම (SMP) වෙයි. එහි මධ්‍යම සැකසුම් ඒකක (CPU) කුඩා ප්‍රමාණයක්ම ඒවායේ මතක පද්ධති ගැන සංසක්ත දර්ශනයක් ඇත. මෙම ක්‍රමයේදී සෑම මධ්‍යම සැකසුම් ඒකකයක්ම (CPU) මතක පිළිබඳ දර්ශනයක් තබා ගැනීම සඳහා නිතරම යාවත්කාලීන වන අතිරේක දෘඪාංග තිබේ. මතකය පිළිබඳ යාවත්කාලීන දර්ශනයක් තිබීමෙන් මධ්‍යම සැකසුම් ඒකකය (CPU) හට එකම ක්‍රමලේඛණ සම්බන්ධයෙන් සහයෝගයෙන් වැඩ කල හැකිය. එසේම ක්‍රමලේඛවලට එක් මධ්‍යම සැකසුම් ඒකකයකින් තවත් මධ්‍යම සැකසුම් ඒකකයකට සංක්‍රමණය විය හැක. සහයෝගයෙන් වැඩ කල හැකි මධ්‍යම සැකසුම් ඒකක සංඛ්‍යාව අතලොස්සක ප්‍රමාණයේ සිට ඉහල දැමීමට අනේකාකාර මතක ප්‍රවේශ (non-uniform memory access) (NUMA) හා  නිර්දේශක සංසක්ත ප්‍රොටොකෝලය (directory - based coherence protocols) වැනි ක්‍රම 90 දශකයේ හඳුන්වා දෙන ලදී.  SMP පද්ධති මධ්‍යම සැකසුම් ඒකක(CPU) කුඩා සංඛ්‍යාවකට සීමා වන අතර NUMA පද්ධති සකසන දහස් ගණනක් සහිතව ගොඩනගා ඇත. මුල් අවස්ථාවේදී බහු සැකසුම ගොඩනැගුවේ විවික්ත මධ්‍යම සැකසුම් ඒකක(CPU)  විශාල ගණනක් හා සකසන අතර අන්තර් සම්බන්ධතාවය ගොඩ නැඟීමේ පුවරු සහිතවය. සකසනයන්හි අන්තර් සම්බන්ධතාවය තනි සිලිකන් චිපයක් මත ගොඩ නගා ඇති විට බහු-මාධ්‍ය අණු සැකසුම ලෙස හැඳින්වේ.
ක්‍රම ලේඛයක් තුළ සියුම් අයුරින් සමාන්තරතාවයක් ඇති බව පසුව සොයා ගන්නා ලදි. එක් ක්‍රම ලේඛයක සමාන්තරව හෝ වෙන වෙනම ක්‍රියාකරවිය හැකි පොට (හෝ කර්යය) කිහිපයක් තිබිය හැක. මෙම තාක්ෂණයේ සමහර මුල් උදාහරන වලින් ඍජු මතක ප්‍රවේශය ආගණන පොටෙන් වෙනත් පොටක් ලෙස ගැනීම වැනි ආදායක/ප්‍රතිදායක සැකසුම් ක්‍රියාත්මක කරවන ලදී. 70 දශකයේදී මීට වඩා පහසු ප්‍රවේශයක් මෙම තාක්ෂණයට ඉදිරිපත් කරන ලද්දේ බහු ආගණන පොට ගණනක් සමාන්තරව ධාවනය වනසේ  පද්ධති සැලසුම් කිරීමෙනි. මෙම තාක්ෂණය බහුපොට තාක්ෂණය ලෙස හැඳින්වේ. මේ පිවිසුම් බහු පොටට ආධාර කිරීම සඳහා මධ්‍යම සැකසුම් ඒකකයෙහි(CPU) ඇති උපාංග කුඩා ප්‍රමාණයක් පමණක් ප්‍රතිචලන කල යුතුය. බහු සැකසුමේදී මුළු මධ්‍යම සැකසුම් ඒකක(CPU)යම ප්‍රතිචලන කල යුතු නිසා, බහු සැකසුම වඩා පිරිවැය ඵලදායී ලෙස සැළකේ. බහුපොටේදී ක්‍රියා කරවන ඒකක, (හැඹිලි ඇතුළු මතක පද්ධතිය ද) බහු පොටවල් විසින් හවුලේ භුක්ති විදීම සිදු කරයි. බහුපොටෙහි ඇති දුර්වලතාවයක් නම් බහුපොට සඳහා දෘඪාංග දක්වන අනුග්‍රහය දෘඪාංග බහු සැකසුමට දක්වන අනුග්‍රහයට වඩා දැඩිව මෘදුකාංගවලට දර්ශනය වීමයි. එනිසා මෙහෙයුම් පද්ධති වැනි අධීක්ෂක මෘදුකාංග වලට බහුපොට හට ආධාර කිරීම සඳහා වඩා විශාල වෙනස්කම් කල යුතු වෙයි. ක්‍රියාත්මක කරන ලද එක් බහුපොට ආකාරයක් ඒකක බහුපොටකරණය ලෙස හැඳින්වෙන අතර, එහිදී එක් පොටක් බාහිර මතකයෙන් දත්ත ලැබී නතර වනතුරු  ක්‍රියාකරවනු ලැබේ. මෙම පටිපාටියේදී මධ්‍යම සැකසුම් ඒකකය (CPU), එවිට ක්‍රියාකරවීම සුදානම්ව බලා සිටින වෙනත් පොටක් වෙත යොමු වන අතර, මෙම මාරුවීම සාමාන්‍යයෙන් මධ්‍යම සැකසුම් ඒකක(CPU) ස්පන්ද චක්‍රයකදී සිදුවේ. තවත් බහුපොට ආකාරයක් සමගාමී බහු උපකරණය ලෙස හැඳින්වෙන අතර, එහිදි එක් මධ්‍යම සැකසුම් ඒකකයක් ස්පන්ද චක්‍රයකදි පොට කිහිපයක උපදෙස් ක්‍රියාකරවීමට සිදුවේ.
70 දශකයේ සිට මේ දශකයේ (වසර 2000 ඇරඹි දශකය) මුල් භාගය වන තෙක් වු දශක කිහිපය තුළ උසස් කාර්ය සාධනයක් යුත් පොදු කාර්යය මධ්‍යම සැකසුම් ඒකක සැලසුම් කිරීම උදෙසා යොදා ගත් ක්‍රමයන් කිහිපයකි. ඒ නල මාර්ගකරණය, හැඹිලි, සුපිරි අදිශ  (Superscalar) ක්‍රියා කරවීම, අපිළිවෙල  (out-of- order) ක්‍රියා කරවීම ආදි ඉහල  ILP ලබා දෙන තාක්ෂණයයි. මෙම නැම්මෙහි ප්‍රතිඵලය වුයේ ශක්තිය වැඩිපුර අවශ්‍ය වන Intel Pentium 4  වැනි  CPU  බිහි වීමයි. මේ දශකයේ ‍මුලදී මෙවැනි මධ්‍යම සැකසුම් ඒකක (CPU)  සැලසුම්කරුවන් හට ILP  ශිල්පීය ක්‍රම වලින් උසස් කාර්ය සාධනයක් ලබා ගත නොහැකි වුයේ මධ්‍යම සැකසුම් ඒකක (CPU) මෙහෙයුම් සංඛ්‍යාත හා ප්‍රධාන මතක මෙහෙයුම් සංඛ්‍යාත අතර වු වැඩි වන විෂමතාවය හා නොපැහැදිලි ILP  ශිල්පීය ක්‍රම මඟින් බලය අපතේ යාම වැඩිවීමයි.
මධ්‍යම සැකසුම් ඒකක සැලසුම්කරුවන් විසින් ඊළඟට ගනුදෙනු සැකසුම වැනි වාණිජ පරිගණක වෙළඳපොල වලින් අදහස් ලබා ගන්නා ලදී. මෙවැනි ගනුදෙනු සැකසුමේදී වඩා වැදගත් වන්නේ තනි පොටක හෝ ක්‍රමලේඛයක කාර්ය සාධනයට වඩා සාධික ප්‍රමාණය(throughput) පරිගණනය ලෙස හැඳින්වෙන ක්‍රම ලේඛ ගණනක සමස්ථ කාර්ය සාධනයයි.
මෙම අවධානය වෙනස්වීමට බලපෑ සාධක නම් ද්විත්ව හා බහු මාධ්‍යය චිප-මට්ටමේ බහු සැකසුම් (CMP) සැලසුම් ප්‍රගුණනය කිරීමත්, විශේෂයෙන්ම අඩුවෙන් සුපිරි අදිශ  ලක්ෂණ පෙන්වන Intel PC නිර්මිතයට සමානකම් දක්වන මධ්‍යම සැකසුම් ඒකක(CPU)  වල  ක්‍රියාකාරිත්වයත්ය. පසුව පැමිණි සකසන පවුල් කිහිපයකම චිප-මට්ටමේ බහු සැකසුම් ලක්ෂණ තිබේ. x86-64, Opteron, සහ Athlon 64xz, SPARC, UltraSPARC T1, IBM POWER4, POWER5 හි මෙන්ම Xbox 360 හි ත්‍රිත්ව මාධ්‍යය Power PC  සැලසුම හා PS3  හි එක් මධ්‍යය අණු සැකසුම වැනි වීඩියෝ ක්‍රීඩා කන්සෝල මධ්‍යම සැකසුම් ඒකක(CPU)  කිහිපයකම දක්නට ලැබේ.


== නිය මඟක (bus) විස්තරය ==
එක්තරා කාලයක “නිය මඟ” යන්නෙන් අදහස් කරන ලද්දේ මධ්‍යම සැකසුම් ඒකක (CPU) අග්‍ර වලට සමාන හෝ සර්වසම විද්‍යුත් සන්නායක සහිත විද්‍යුත් වශයෙන් සමාන්තර පද්ධතියකි.
	නියමඟවල් ගැන සලකන විට දත්ත පදවලට සමාන්තරව බහු තන්තුවල හෝ ගෙන යන සමාන්තර නියමඟක හෝ දත්ත ශ්‍රේණියක බිටු ආකාරයෙන් ගෙන යන ශ්‍රේණිගත නියමඟක් විය හැකිය. අතිරේක බල හා පාලන සබැඳුම්, විශේෂිත ධාවක සහ දත්ත සබැඳුම් එක එක අත් වලට ති‍බිමේ සාමාන්‍ය ප්‍රතිථලය වන්නේ බොහෝ ශ්‍රේණිගත නියමඟවල, 1-wire (තන්තු) ශ්‍රේණිගත නියමඟ වල ඇති අවම සන්නායක සංඛ්‍යාව වන එකට වඩා වැඩි ගණනක් සන්නායක අඩංගු වීමයි. දත්ත හුවමාරු ශීඝ්‍රතාව ඉහළයත්ම, කාල නිශ්චය කුටිකය(timing-skew) හි ගැටලු, බලය පාරිභෝජනයත්, විද්‍යුත් චුම්භක බාධකය සහ සමාන්තර නියමඟ අතර cross talk  යන ගැටළු මඟ හැර යාමත් වඩාත්ම අපහසු වේ. නියමඟ අතර ද්විත්ව පොම්ප(double pump) කිරීම මෙයට ඇති එක් අර්ධ විසඳුමකි. අඩු විද්‍යුත් සබැඳුම් ගණනක් ඇති වුවත් ශ්‍රේණිගත නියමඟවල සහජයෙන්ම timing skew හෝ වචන හුවමාරුව (cross talk) හෝ ‍නොමැති නිසා බොහෝ අවස්ථා වල දී සමාන්තර නියමඟට වඩා වැඩි සමස්ථ දත්ත හුවමාරු ශීඝ්‍රතාවයක් දැකවීමට පුලුවන. USB, Fire Wire හා ශ්‍රේණිගත  ATA  මෙයට උදාහරණ වේ. වේගවත් ශ්‍රේණිගත නියමඟ සඳහා multi drop  සබැඳුම් එතරම් හොඳින් ක්‍රියා නොකරන නිසා බොහෝ නවීන ශ්‍රේණිගත නියමඟ සඳහා යොදා ගන්නේ ඩේසි - චේන්(daisy-chain) හෝ හබ් (hub, මධ්‍යස්ථානය) සැලසුම්ය.
බොහෝ පරිගණකවල අභ්‍යන්තර හා බාහිර නියමඟ ‍යන දෙවර්ගයම ඇත. අභ්‍යන්තර නියමඟ මඟින් පරිගණකයේ සියලුම අභ්‍යන්තර කොටස් මව් පුවරුවට සම්බන්ධ කෙරේ. (CPU හා අභ්‍යන්තර මතක ද ඇතුලත්ව) වෙනත් පරිගණක වල ඇති හෝ බාහිර උපකරණ සම්බන්ධ කිරීමට නොව පෙදෙසි උපකරණ සම්බන්ධ කිරීමට ඇති නිසා මෙම වර්ගයේ පෙදෙසි ,අනුමත පෙදෙසි ලෙස ද හැඳින්වේ. එසේම බාහිර පර්යන්ත සම්බන්ධ කිරීමට බාහිර නියමඟ යොදා ගනි.
ප්‍රායෝගික වෙනසකට වඩා ඇත්තේ සංකල්පිත වෙනසක් වුවත්, Ethernet වැනි ජාල සබැඳුම් සාමාන්‍යයෙන් නියමඟ ලෙස නොගැනේ.  InfiniBand සහ අති පරිවහනය (Hyper Transport) වැනි නව තාක්ෂණ වල සම්ප්‍රාප්තියත් සමඟ ජාල හා නියමඟ අතර ඇති වෙනස තවදුරටත් බොද වේ. අභ්‍යන්තර හා බාහිර නියමඟ අතර ඇති වෙනස පවා සමහර අවස්ථාවන්හි අනියත වන අතර, I² C අභ්‍යන්තර හෝ බාහිර නියමඟ (මෙහිදී ACCESS.bus)ලෙස හැඳින්වේ) ලෙස භාවිතා කළ හැකි අතර,  InfiniBand මඟින් PCI වැනි අභ්‍යන්තර නියමඟ හා තන්තු අනුමඟ(Fibre Channel) වැනි බාහිර අනුමග යන දෙකොටසම ප්‍රතිස්ථාපනය කරනු ඇත.


== නූතන මධ්‍ය සැකසුම් ඒකක නිෂ්පාදන ආයතන ==
ප්‍රධාන CPU වර්ග නිෂ්පාදන ආයතන තුනකි . ( 2021.03.19 වන විට )
*Intel (ඉන්ටෙල්)
*AMD (Advanced Micro Devices) (ඒ.එම්.ඩී.)
*Apple (ඇපල්)